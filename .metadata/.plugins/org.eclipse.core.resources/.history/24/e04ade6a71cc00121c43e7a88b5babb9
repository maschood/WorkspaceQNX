/*
 * BasicState.h
 *
 *  Created on: 03.06.2013
 *      Author: maschood
 */

#ifndef BASICSTATE_H_
#define BASICSTATE_H_

#include "DISPATCHER/HALCallInterface.h"
#include "HAL_A.h"
#include "Controller.h"


class BasicState: public HALCallInterface  {
public:
	BasicState((Controller)* controller);
	virtual ~BasicState();

	virtual void PART_IN_0();
	virtual void PART_IN_1();
	virtual void PART_HEIGHT_0();
	virtual void PART_HEIGHT_1();
	virtual void PART_IN_GATE_0();
	virtual void PART_IN_GATE_1();
	virtual void PART_METALL();
	virtual void GATE_STATUS_0();
	virtual void GATE_STATUS_1();
	virtual void SLIDE_FULL_0();
	virtual void SLIDE_FULL_1();
	virtual void PART_OUT_0();
	virtual void PART_OUT_1();
	virtual void START_BTN_PRESSED();
	virtual void START_BTN_RELEASED();
	virtual void STOP_BTN_PRESSED();
	virtual void STOP_BTN_RELEASED();
	virtual void RESET_BTN_PRESSED();
	virtual void RESET_BTN_RELEASED();
	virtual void ESTOP_BTN_PRESSED();
	virtual void ESTOP_BTN_RELEASED();

protected:

	HAL_A* hal_a;
	Controller
};

#endif /* BASICSTATE_H_ */
