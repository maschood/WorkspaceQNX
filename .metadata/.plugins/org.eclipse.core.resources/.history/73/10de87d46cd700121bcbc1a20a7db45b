/*
 * B2S01_Entry.cpp
 *
 *  Created on: 08.06.2013
 * @author Erik Matthiessen
 *         Denis Rycka
 *         Nilüfer Güngör
 *         Maschhood Ahmad
 *
 */

#include "B2S01_Entry.h"
#include "Dispatcher.h"

B2S01_Entry::B2S01_Entry(Controller* controller) : BaseState(controller) {
		this->controller = controller;
		puckHandler->addPuckToBand(this->controller);
int i =Dispatcher::getInstance()->PuckTyp;
		std::cout<<i<<endl;

	#ifdef DEBUG_STATE_PRINTF
		printf("DEBUG STATE: Puck%d -> B2S01_Entry \n", this->controller->getID());
	#endif
}

B2S01_Entry::~B2S01_Entry() {

}

void B2S01_Entry::sbStartOpen() {

	hal_a->engine_right(false);
	hal_a->engine_unstop();
	timerHandler->deleteTimer(controller->handOverTimer);
	controller->handOverTimer = NULL;

	rs232_1->sendMsg(RS232_PUCK_ARRIVED_ON_BAND2);
}

void B2S01_Entry::sbStartClosed() {

	this->controller->setSegTimerMinCalled(false);
	this->controller->segTimerMin = timerHandler->createTimer(puckHandler->getDispChid(), TIME_VALUE_SEG1_MIN_SEC, TIME_VALUE_SEG1_MIN_MSEC, TIMER_SEG1_MIN);
	this->controller->segTimerMax = timerHandler->createTimer(puckHandler->getDispChid(), TIME_VALUE_SEG1_MAX_SEC, TIME_VALUE_SEG1_MAX_MSEC, TIMER_SEG1_MAX);
	timerHandler->startTimer(this->controller->segTimerMin);
	timerHandler->startTimer(this->controller->segTimerMax);


	new (this) B2S02_Seg1(controller);
}

